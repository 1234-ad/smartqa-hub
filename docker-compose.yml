version: '3.8'

services:
  smartqa-hub:
    build: .
    container_name: smartqa-hub
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - LOG_LEVEL=info
    volumes:
      - ./logs:/app/logs
      - ./reports:/app/reports
      - ./tests/visual:/app/tests/visual
      - ./config:/app/config
    networks:
      - smartqa-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Optional: Redis for caching and session storage
  redis:
    image: redis:7-alpine
    container_name: smartqa-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - smartqa-network
    restart: unless-stopped
    command: redis-server --appendonly yes

  # Optional: PostgreSQL for test results storage
  postgres:
    image: postgres:15-alpine
    container_name: smartqa-postgres
    environment:
      POSTGRES_DB: smartqa
      POSTGRES_USER: smartqa
      POSTGRES_PASSWORD: smartqa_password
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - smartqa-network
    restart: unless-stopped

  # Optional: Grafana for advanced analytics
  grafana:
    image: grafana/grafana:latest
    container_name: smartqa-grafana
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/datasources:/etc/grafana/provisioning/datasources
    networks:
      - smartqa-network
    restart: unless-stopped
    depends_on:
      - postgres

  # Optional: Prometheus for metrics collection
  prometheus:
    image: prom/prometheus:latest
    container_name: smartqa-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    networks:
      - smartqa-network
    restart: unless-stopped
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'

  # Optional: Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: smartqa-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    networks:
      - smartqa-network
    restart: unless-stopped
    depends_on:
      - smartqa-hub

volumes:
  redis-data:
  postgres-data:
  grafana-data:
  prometheus-data:

networks:
  smartqa-network:
    driver: bridge